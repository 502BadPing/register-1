name: Update Cloudflare DNS Records

on:
  push:
    branches:
      - main
    paths:
      - 'domains/*.json'  # Trigger only for changes in domains/*.json
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - 'domains/*.json'  # Trigger only for changes in domains/*.json

jobs:
  update-dns:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Fetch last two commits to compare changes

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Get changed JSON files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            # Get changed files in the domains folder
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD -- domains/*.json || echo "")
          else
            # Get changed files in the merged pull request
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} -- domains/*.json || echo "")
          fi
          # Debug: Log changed files
          echo "Raw changed files: $CHANGED_FILES"
          # Convert to JSON array, handling empty input
          if [ -z "$CHANGED_FILES" ]; then
            CHANGED_FILES_JSON="[]"
          else
            # Use printf to avoid trailing newlines
            CHANGED_FILES_JSON=$(printf "%s\n" "$CHANGED_FILES" | jq -R . | jq -s .)
          fi
          echo "JSON output: $CHANGED_FILES_JSON"
          echo "changed_files=$CHANGED_FILES_JSON" >> $GITHUB_OUTPUT

      - name: Process changed JSON files and update DNS
        if: steps.changed-files.outputs.changed_files != '[]'
        env:
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          CHANGED_FILES: ${{ steps.changed-files.outputs.changed_files }}
        run: |
          python .github/scripts/update_dns.py "$CHANGED_FILES"
